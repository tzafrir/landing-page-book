// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Wizard Wizard should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Wizard
    backButtonCls="btn btn-primary pull-left"
    backButtonText="Back"
    contentAlign="left"
    dontValidate={true}
    hocValidationAppliedTo={Array []}
    nextButtonCls="btn btn-primary pull-right"
    nextButtonText="Next"
    nextTextOnFinalActionStep="Next"
    onStepChange={[Function]}
    prevBtnOnLastStep={true}
    preventEnterSubmission={true}
    showHeader={true}
    showHeaderBorder={true}
    showNavigation={true}
    startAtStep={0}
    steps={
      Array [
        Object {
          "component": <div>
            Hello
          </div>,
          "name": "Step 1",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Card
        contentAlign="left"
        image=""
        imageBorder={false}
        imageCircle={true}
        imageShadow={false}
        shadow={false}
        showBorder={true}
        subTitle=""
        summary=""
        summaryJustified={false}
        title=""
      >
        <Header
          borderBottom={true}
          borderTop={false}
          className="pb-3"
          color=""
          icon=""
          textAlign="left"
          type="h5"
        >
          Step 1
        </Header>
        <StepZilla
          backButtonCls="btn btn-primary pull-left"
          backButtonText="Back"
          dontValidate={true}
          hocValidationAppliedTo={Array []}
          nextButtonCls="btn btn-primary pull-right"
          nextButtonText="Next"
          nextTextOnFinalActionStep="Next"
          onStepChange={[Function]}
          prevBtnOnLastStep={true}
          preventEnterSubmission={true}
          showNavigation={true}
          showSteps={false}
          startAtStep={0}
          steps={
            Array [
              Object {
                "component": <div>
                  Hello
                </div>,
                "name": "Step 1",
              },
            ]
          }
          stepsNavigation={false}
        />
      </Card>,
      "className": "Wizard",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Header
            borderBottom={true}
            borderTop={false}
            className="pb-3"
            color=""
            icon=""
            textAlign="left"
            type="h5"
          >
            Step 1
          </Header>,
          <StepZilla
            backButtonCls="btn btn-primary pull-left"
            backButtonText="Back"
            dontValidate={true}
            hocValidationAppliedTo={Array []}
            nextButtonCls="btn btn-primary pull-right"
            nextButtonText="Next"
            nextTextOnFinalActionStep="Next"
            onStepChange={[Function]}
            prevBtnOnLastStep={true}
            preventEnterSubmission={true}
            showNavigation={true}
            showSteps={false}
            startAtStep={0}
            steps={
              Array [
                Object {
                  "component": <div>
                    Hello
                  </div>,
                  "name": "Step 1",
                },
              ]
            }
            stepsNavigation={false}
          />,
        ],
        "contentAlign": "left",
        "image": "",
        "imageBorder": false,
        "imageCircle": true,
        "imageShadow": false,
        "shadow": false,
        "showBorder": true,
        "subTitle": "",
        "summary": "",
        "summaryJustified": false,
        "title": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "borderBottom": true,
            "borderTop": false,
            "children": "Step 1",
            "className": "pb-3",
            "color": "",
            "icon": "",
            "textAlign": "left",
            "type": "h5",
          },
          "ref": null,
          "rendered": "Step 1",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "backButtonCls": "btn btn-primary pull-left",
            "backButtonText": "Back",
            "dontValidate": true,
            "hocValidationAppliedTo": Array [],
            "nextButtonCls": "btn btn-primary pull-right",
            "nextButtonText": "Next",
            "nextTextOnFinalActionStep": "Next",
            "onStepChange": [Function],
            "prevBtnOnLastStep": true,
            "preventEnterSubmission": true,
            "showNavigation": true,
            "showSteps": false,
            "startAtStep": 0,
            "steps": Array [
              Object {
                "component": <div>
                  Hello
                </div>,
                "name": "Step 1",
              },
            ],
            "stepsNavigation": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Card
          contentAlign="left"
          image=""
          imageBorder={false}
          imageCircle={true}
          imageShadow={false}
          shadow={false}
          showBorder={true}
          subTitle=""
          summary=""
          summaryJustified={false}
          title=""
        >
          <Header
            borderBottom={true}
            borderTop={false}
            className="pb-3"
            color=""
            icon=""
            textAlign="left"
            type="h5"
          >
            Step 1
          </Header>
          <StepZilla
            backButtonCls="btn btn-primary pull-left"
            backButtonText="Back"
            dontValidate={true}
            hocValidationAppliedTo={Array []}
            nextButtonCls="btn btn-primary pull-right"
            nextButtonText="Next"
            nextTextOnFinalActionStep="Next"
            onStepChange={[Function]}
            prevBtnOnLastStep={true}
            preventEnterSubmission={true}
            showNavigation={true}
            showSteps={false}
            startAtStep={0}
            steps={
              Array [
                Object {
                  "component": <div>
                    Hello
                  </div>,
                  "name": "Step 1",
                },
              ]
            }
            stepsNavigation={false}
          />
        </Card>,
        "className": "Wizard",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Header
              borderBottom={true}
              borderTop={false}
              className="pb-3"
              color=""
              icon=""
              textAlign="left"
              type="h5"
            >
              Step 1
            </Header>,
            <StepZilla
              backButtonCls="btn btn-primary pull-left"
              backButtonText="Back"
              dontValidate={true}
              hocValidationAppliedTo={Array []}
              nextButtonCls="btn btn-primary pull-right"
              nextButtonText="Next"
              nextTextOnFinalActionStep="Next"
              onStepChange={[Function]}
              prevBtnOnLastStep={true}
              preventEnterSubmission={true}
              showNavigation={true}
              showSteps={false}
              startAtStep={0}
              steps={
                Array [
                  Object {
                    "component": <div>
                      Hello
                    </div>,
                    "name": "Step 1",
                  },
                ]
              }
              stepsNavigation={false}
            />,
          ],
          "contentAlign": "left",
          "image": "",
          "imageBorder": false,
          "imageCircle": true,
          "imageShadow": false,
          "shadow": false,
          "showBorder": true,
          "subTitle": "",
          "summary": "",
          "summaryJustified": false,
          "title": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "borderBottom": true,
              "borderTop": false,
              "children": "Step 1",
              "className": "pb-3",
              "color": "",
              "icon": "",
              "textAlign": "left",
              "type": "h5",
            },
            "ref": null,
            "rendered": "Step 1",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "backButtonCls": "btn btn-primary pull-left",
              "backButtonText": "Back",
              "dontValidate": true,
              "hocValidationAppliedTo": Array [],
              "nextButtonCls": "btn btn-primary pull-right",
              "nextButtonText": "Next",
              "nextTextOnFinalActionStep": "Next",
              "onStepChange": [Function],
              "prevBtnOnLastStep": true,
              "preventEnterSubmission": true,
              "showNavigation": true,
              "showSteps": false,
              "startAtStep": 0,
              "steps": Array [
                Object {
                  "component": <div>
                    Hello
                  </div>,
                  "name": "Step 1",
                },
              ],
              "stepsNavigation": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
