// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Image Image should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Image
    alt="This is an image"
    border={false}
    className="img-fluid"
    imgFilter={null}
    rounded={false}
    shadow={false}
    src="logo.png"
    tooltip=""
    width={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <img
          alt="This is an image"
          className="img-fluid"
          onLoad={[Function]}
          src="logo.png"
          style={
            Object {
              "display": "none",
              "filter": null,
            }
          }
          title=""
          width={undefined}
        />,
        <svg
          alt="This is an image"
          className="img-fluid"
          viewBox="0 0 100 100"
          width={undefined}
        >
          <g>
            
            <rect
              fill="#CCC"
              height="100"
              width="100"
            />
          </g>
        </svg>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "This is an image",
          "className": "img-fluid",
          "onLoad": [Function],
          "src": "logo.png",
          "style": Object {
            "display": "none",
            "filter": null,
          },
          "title": "",
          "width": undefined,
        },
        "ref": Object {
          "current": null,
        },
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "This is an image",
          "children": <g>
            
            <rect
              fill="#CCC"
              height="100"
              width="100"
            />
          </g>,
          "className": "img-fluid",
          "viewBox": "0 0 100 100",
          "width": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "",
              <rect
                fill="#CCC"
                height="100"
                width="100"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "fill": "#CCC",
                "height": "100",
                "width": "100",
              },
              "ref": null,
              "rendered": null,
              "type": "rect",
            },
          ],
          "type": "g",
        },
        "type": "svg",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <img
            alt="This is an image"
            className="img-fluid"
            onLoad={[Function]}
            src="logo.png"
            style={
              Object {
                "display": "none",
                "filter": null,
              }
            }
            title=""
            width={undefined}
          />,
          <svg
            alt="This is an image"
            className="img-fluid"
            viewBox="0 0 100 100"
            width={undefined}
          >
            <g>
              
              <rect
                fill="#CCC"
                height="100"
                width="100"
              />
            </g>
          </svg>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "This is an image",
            "className": "img-fluid",
            "onLoad": [Function],
            "src": "logo.png",
            "style": Object {
              "display": "none",
              "filter": null,
            },
            "title": "",
            "width": undefined,
          },
          "ref": Object {
            "current": null,
          },
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "This is an image",
            "children": <g>
              
              <rect
                fill="#CCC"
                height="100"
                width="100"
              />
            </g>,
            "className": "img-fluid",
            "viewBox": "0 0 100 100",
            "width": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "",
                <rect
                  fill="#CCC"
                  height="100"
                  width="100"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "fill": "#CCC",
                  "height": "100",
                  "width": "100",
                },
                "ref": null,
                "rendered": null,
                "type": "rect",
              },
            ],
            "type": "g",
          },
          "type": "svg",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
