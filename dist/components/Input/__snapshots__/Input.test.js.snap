// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input Input should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Input
    className=""
    icon=""
    iconAlign="left"
    id=""
    label=""
    labelColon={false}
    name=""
    onChange={[Function]}
    placeholder=""
    size=""
    type="text"
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        "",
        <div
          className="Input__Container"
        >
          <input
            className="form-control  "
            id=""
            name=""
            onChange={[Function]}
            placeholder=""
            type="text"
            value=""
          />
          
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="form-control  "
              id=""
              name=""
              onChange={[Function]}
              placeholder=""
              type="text"
              value=""
            />,
            false,
            "",
          ],
          "className": "Input__Container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control  ",
              "id": "",
              "name": "",
              "onChange": [Function],
              "placeholder": "",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          false,
          "",
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          "",
          <div
            className="Input__Container"
          >
            <input
              className="form-control  "
              id=""
              name=""
              onChange={[Function]}
              placeholder=""
              type="text"
              value=""
            />
            
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="form-control  "
                id=""
                name=""
                onChange={[Function]}
                placeholder=""
                type="text"
                value=""
              />,
              false,
              "",
            ],
            "className": "Input__Container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control  ",
                "id": "",
                "name": "",
                "onChange": [Function],
                "placeholder": "",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
            "",
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
