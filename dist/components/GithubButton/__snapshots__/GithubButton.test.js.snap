// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GithubButton GithubButton should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GithubButton
    btnText="Forks"
    btnType="fork"
    className=""
    color="light"
    disabled={false}
    loadingClass="fa fa-circle-o-notch fa-spin"
    repository="landing-page-book"
    rounded={true}
    showBtnText={true}
    showCounter={true}
    showGithubIcon={false}
    username="front10"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Button
          active={false}
          ariaLabel=""
          circle={false}
          className=""
          color="light"
          disabled={false}
          loading={false}
          loadingClass="fa fa-circle-o-notch fa-spin"
          onClick={[Function]}
          outline={false}
          rounded={true}
          size=""
          style={Object {}}
          tooltip=""
          type="button"
        >
          <i
            aria-hidden="true"
            className={undefined}
          />
           
          <span
            className="buttonText"
          >
            Forks
          </span>
        </Button>,
        <Button
          active={false}
          ariaLabel=""
          circle={false}
          className="speech-bubble"
          color="light"
          disabled={false}
          loading={false}
          loadingClass="fa fa-circle-o-notch fa-spin"
          onClick={[Function]}
          outline={false}
          rounded={true}
          size=""
          style={Object {}}
          tooltip=""
          type="button"
        >
          <Icon
            className=""
            icon="fa fa-circle-o-notch fa-spin"
            onClick={[Function]}
            style={Object {}}
            title=""
          />
        </Button>,
      ],
      "className": " GithubDetail_btn_container d-inline",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "ariaLabel": "",
          "children": Array [
            <i
              aria-hidden="true"
              className={undefined}
            />,
            " ",
            <span
              className="buttonText"
            >
              Forks
            </span>,
          ],
          "circle": false,
          "className": "",
          "color": "light",
          "disabled": false,
          "loading": false,
          "loadingClass": "fa fa-circle-o-notch fa-spin",
          "onClick": [Function],
          "outline": false,
          "rounded": true,
          "size": "",
          "style": Object {},
          "tooltip": "",
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": "true",
              "className": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Forks",
              "className": "buttonText",
            },
            "ref": null,
            "rendered": "Forks",
            "type": "span",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "ariaLabel": "",
          "children": <Icon
            className=""
            icon="fa fa-circle-o-notch fa-spin"
            onClick={[Function]}
            style={Object {}}
            title=""
          />,
          "circle": false,
          "className": "speech-bubble",
          "color": "light",
          "disabled": false,
          "loading": false,
          "loadingClass": "fa fa-circle-o-notch fa-spin",
          "onClick": [Function],
          "outline": false,
          "rounded": true,
          "size": "",
          "style": Object {},
          "tooltip": "",
          "type": "button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "",
            "icon": "fa fa-circle-o-notch fa-spin",
            "onClick": [Function],
            "style": Object {},
            "title": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Button
            active={false}
            ariaLabel=""
            circle={false}
            className=""
            color="light"
            disabled={false}
            loading={false}
            loadingClass="fa fa-circle-o-notch fa-spin"
            onClick={[Function]}
            outline={false}
            rounded={true}
            size=""
            style={Object {}}
            tooltip=""
            type="button"
          >
            <i
              aria-hidden="true"
              className={undefined}
            />
             
            <span
              className="buttonText"
            >
              Forks
            </span>
          </Button>,
          <Button
            active={false}
            ariaLabel=""
            circle={false}
            className="speech-bubble"
            color="light"
            disabled={false}
            loading={false}
            loadingClass="fa fa-circle-o-notch fa-spin"
            onClick={[Function]}
            outline={false}
            rounded={true}
            size=""
            style={Object {}}
            tooltip=""
            type="button"
          >
            <Icon
              className=""
              icon="fa fa-circle-o-notch fa-spin"
              onClick={[Function]}
              style={Object {}}
              title=""
            />
          </Button>,
        ],
        "className": " GithubDetail_btn_container d-inline",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "ariaLabel": "",
            "children": Array [
              <i
                aria-hidden="true"
                className={undefined}
              />,
              " ",
              <span
                className="buttonText"
              >
                Forks
              </span>,
            ],
            "circle": false,
            "className": "",
            "color": "light",
            "disabled": false,
            "loading": false,
            "loadingClass": "fa fa-circle-o-notch fa-spin",
            "onClick": [Function],
            "outline": false,
            "rounded": true,
            "size": "",
            "style": Object {},
            "tooltip": "",
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Forks",
                "className": "buttonText",
              },
              "ref": null,
              "rendered": "Forks",
              "type": "span",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "ariaLabel": "",
            "children": <Icon
              className=""
              icon="fa fa-circle-o-notch fa-spin"
              onClick={[Function]}
              style={Object {}}
              title=""
            />,
            "circle": false,
            "className": "speech-bubble",
            "color": "light",
            "disabled": false,
            "loading": false,
            "loadingClass": "fa fa-circle-o-notch fa-spin",
            "onClick": [Function],
            "outline": false,
            "rounded": true,
            "size": "",
            "style": Object {},
            "tooltip": "",
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "icon": "fa fa-circle-o-notch fa-spin",
              "onClick": [Function],
              "style": Object {},
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
